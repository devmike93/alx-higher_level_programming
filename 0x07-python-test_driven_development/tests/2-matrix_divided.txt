The 2-matrix_divided Module:
========================
    

This module defines a matrix division function

# Make Sure Documentation Exists:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided 

    >>> module_documentation = __import__("2-matrix_divided").__doc__
    >>> print(len(module_documentation) > 0)
    True

    >>> function_documentation = __import__("2-matrix_divided").matrix_divided.__doc__
    >>> print(len(function_documentation) > 0)
    True


# Correct Usage:
    
- 'matrix_divided(..)' Divide each element of a matrix by a specified divisor,
returning a new matrix representing the result of the division.

    >>> matrix = [[1, 2, 3], [4, 5, 6]]

    - Divide a matrix by 3:
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    - The original matrix is left unchanged
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]
    
    - Divide the matrix by a float
    >>> print(matrix_divided(matrix, 2.5))
    [[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]
    
    - Divide the matrix by a negative number
    >>> print(matrix_divided(matrix, -2))
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]
    
    - Integers and floats can be combined.
    >>> matrix = [[1, -2.2, 3, 4.4, 5], [-6.6, 7.00, 8, 9.999, 10]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

# On Errors: 
    
- 'matrix_divided(...)' expects that the argument matrix to be a lists of lists
consisting either of integer or floats
If the input matrix is not a list of lists or contains non-integer or non-float elements, a TypeError is raised.
If divided by 0, a ZeroDivisionError is raised.

- Missing Argument Or Too Many Argument Error:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> print(matrix_divided())
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

- Attempt to divide by 0:

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

- The parameter 'div' must be either an int or float. Otherwise, a TypeError
is raised:

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> print(matrix_divided(matrix, "three"))
    Traceback (most recent call last):
    TypeError: div must be a number
    
- Divide an empty list will raise a TypeError:

    >>> matrix = []
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = None
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
- Also an empty list of lists will raise a TypeError:

    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
- An identical TypeError is raised if 'matrix' is not a list of lists:

    >>> matrix = "not a matrix"    
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [1, 2, 3]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 2, 3], (4, 5, 6), {7, 8, 9}]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

- Attempt to divide a matrix different size rows:

    >>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size
    
- Attempt to divide a matrix with non-numeric values:

    >>> matrix = [[1, "two", "Three"], ["4", 5, 6]]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
