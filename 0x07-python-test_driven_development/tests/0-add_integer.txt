The 0-add_integer Module:
========================


add_integer Module

This module defines a function to perform integer addition with type checking.
It ensures that both `a` and `b` are integers or floating-point numbers before
performing addition.


# Make Sure Documentation Exists:

    >>> add_integer = __import__("0-add_integer").add_integer

    >>> module_documentation = __import__("0-add_integer").__doc__
    >>> print(len(module_documentation) > 0)
    True

    >>> function_documentation = __import__("0-add_integer").add_integer.__doc__
    >>> print(len(function_documentation) > 0)
    True


# Correct Usage:

'add_integer(...)' returns the sum of `a` and `b` as an integer.

    >>> print(add_integer(1, 1))
    2

    >>> print(add_integer(1, -1))
    0

    >>> print(add_integer(3.1, -1))
    2

    >>> print(add_integer(3**3, -1))
    27

    >>> print(add_integer(2**0.5, -2))
    -1

    >>> print(add_integer(2))
    100

# On Errors:

'add_integer(...)' expects that both arguments are either integer or floats
If either `a` or `b` is not an integer or float number.

    >>> print(add_integer(1.2, None))
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> print(add_integer("Best", "School"))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer(4, "School"))
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> print(add_integer(None))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer("Hello", "World")
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
     
    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
